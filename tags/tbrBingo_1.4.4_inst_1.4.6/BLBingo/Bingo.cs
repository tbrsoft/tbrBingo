///////////////////////////////////////////////////////////
//  Bingo.cs
//  Implementation of the Class Bingo
//  Generated by Enterprise Architect
//  Created on:      07-Ago-2009 09:05:03 p.m.
//  Original author: tbrSoft
///////////////////////////////////////////////////////////

using System;
using DataBaseManager;
using System.Collections.Generic;
using System.Data;

namespace BLBingo
{
    public class Bingo
    {
        //si cantidadBolillas = 0 -> son ilimitadas
        private int m_CantidadBolillas;
        private int m_CantidadSorteos;
        private eEstadoBingo m_EstadoBingo;
        private DateTime m_Fecha;
        private long m_Id;
        private string m_Nombre;
        private string m_Observaciones;
        private decimal m_Precio;
        /// <summary>
        /// UnGanador, VariosGanadores
        /// </summary>
        private eTipoBingo m_TipoBingo;
        private CartonBingoManager m_CartonesBingo;
        private SorteoManager m_Sorteos;
        
        
        public Bingo()
        {
			//valores predeterminados
			m_CantidadBolillas=90;
			m_CantidadSorteos = 1;
			m_EstadoBingo  = eEstadoBingo.NoIniciado;
        }
        #region Propiedades
        
        public CartonBingoManager CartonesBingo
        {
            get 
            {
                if (m_CartonesBingo == null)
                {
                    m_CartonesBingo = CartonBingoManager.FindByBingo(this.Id);
                } 
                return m_CartonesBingo; 
            }
            set { m_CartonesBingo = value; }
        }      

        public SorteoManager Sorteos
        {
            get 
            {
                if (m_Sorteos == null)
                {
                    m_Sorteos = SorteoManager.FindByBingo(this.Id); 
                } 
                return m_Sorteos; 
            }
            set { m_Sorteos = value; }
        }

        public int CantidadBolillas
        {
            get
            {
                return m_CantidadBolillas;
            }
            set
            {
                m_CantidadBolillas = value;
            }
        }

        public int CantidadSorteos
        {
            get
            {
                return m_CantidadSorteos;
            }
            set
            {
                m_CantidadSorteos = value;
            }
        }

        public eEstadoBingo EstadoBingo
        {
            get
            {
                return m_EstadoBingo;
            }
            set
            {
                m_EstadoBingo = value;
            }
        }

        public DateTime Fecha
        {
            get
            {
                return m_Fecha;
            }
            set
            {
                m_Fecha = value;
            }
        }

        public long Id
        {
            get
            {
                return m_Id;
            }
            set
            {
                m_Id = value;
            }
        }

        public string Nombre
        {
            get
            {
                return m_Nombre;
            }
            set
            {
                m_Nombre = value;
            }
        }

        public string Observaciones
        {
            get
            {
                return m_Observaciones;
            }
            set
            {
                m_Observaciones = value;
            }
        }

        public decimal Precio
        {
            get
            {
                return m_Precio;
            }
            set
            {
                m_Precio = value;
            }
        }

        public eTipoBingo TipoBingo
        {
            get
            {
                return m_TipoBingo;				
            }
            set
            {
                m_TipoBingo = value;
            }
        }
        #endregion

        public void SaveSorteo()
        {
            ParameterManager pm = new ParameterManager();
            pm.Add("id", m_Id, true);            
            pm.Add("idEstadoBingo", m_EstadoBingo);            
            pm.Add("Nombre", m_Nombre);
            pm.Add("Observaciones", m_Observaciones);           
                        
            BaseDatos.DB.ExecuteUpdateCommand(MyTables.Bingo, pm);
                        
            m_Sorteos.Save(Id);
        }

        /// <summary>
        /// Cuando guardo el bingo genero las cartones. 
        /// </summary>
        public void Save()
        {
            ParameterManager pm = new ParameterManager();
            pm.Add("id",m_Id,true );
            pm.Add("CantidadBolillas", m_CantidadBolillas);
            pm.Add("CantidadSorteos", m_CantidadSorteos);
            pm.Add("idEstadoBingo",m_EstadoBingo );
            pm.Add("Fecha", m_Fecha.ToShortDateString());
            pm.Add("Nombre",m_Nombre );
            pm.Add("Observaciones", m_Observaciones);
            pm.Add("Precio",m_Precio );
            pm.Add("idTipoBingo",m_TipoBingo );                                
            
            if (Id == 0)
            {               
               m_Id= BaseDatos.DB.ExecuteInsertCommandWithId(MyTables.Bingo, pm);                
            }
            else
            {
                BaseDatos.DB.ExecuteUpdateCommand(MyTables.Bingo, pm);
            }
            this.m_CartonesBingo.Save(Id);
            m_Sorteos.Save(Id);
        }
    }

    public class BingoManager : List<Bingo>
    {
        /// <summary>
        /// Carga todos los bingos
        /// </summary>
        public BingoManager LoadAll()
        {
            Bingo b = null;
            DataTable dT = new DataTable();            
            dT = BaseDatos.DB.ExecuteSelectCommand(MyTables.Bingo);
            foreach (DataRow dr in dT.Rows )
            {
                b = FillFromDataRow(dr);
                this.Add(b);
            }
            return this;
        }

        private Bingo FillFromDataRow(DataRow dr)
        {
            Bingo ret = new Bingo();
            ret.CantidadBolillas = (int)dr["cantidadBolillas"];
            ret.CantidadSorteos = (int)dr["cantidadSorteos"];
            ret.EstadoBingo = (eEstadoBingo)dr["idEstadoBingo"];
            ret.Fecha = (DateTime)dr["Fecha"];
            ret.Id = long.Parse(dr["id"].ToString()); ;
            ret.Nombre = dr["nombre"].ToString();
            ret.Observaciones = dr["Observaciones"].ToString();
            ret.Precio = decimal.Parse( dr["precio"].ToString());
            ret.TipoBingo = (eTipoBingo)dr["idTipoBingo"];
            //ret.CartonesBingo = CartonBingoManager.FindByBingo(ret.Id);
            //ret.Sorteos = SorteoManager.FindByBingo(ret.Id);            
            return ret;
        }
    }
}