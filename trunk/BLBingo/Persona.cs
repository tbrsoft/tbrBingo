///////////////////////////////////////////////////////////
//  Persona.cs
//  Implementation of the Class Persona
//  Generated by Enterprise Architect
//  Created on:      07-Ago-2009 09:05:05 p.m.
//  Original author: Paliza Martin
///////////////////////////////////////////////////////////

using DataBaseManager;
using System.Data;
namespace BLBingo
{
    public abstract class Persona
    {
        private string m_Apellido;
        private string m_Direccion;
        private string m_DNI;
        private string m_Mail;
        private string m_Nombre;
        private string m_Observaciones=" ";
        private string m_Telefono;
        private long m_Id;

       
        public Persona()
        {

        }

        #region Propiedades
        public long Id
        {
            get { return m_Id; }
            set { m_Id = value; }
        }
        public string NombreFormal
        {
            get { return this.Apellido + ", " + this.Nombre; }

        }

        public string Apellido
        {
            get
            {
                return m_Apellido;
            }
            set
            {
                m_Apellido = value;
            }
        }

        public string Direccion
        {
            get
            {
                return m_Direccion;
            }
            set
            {
                m_Direccion = value;
            }
        }

        public string DNI
        {
            get
            {
                return m_DNI;
            }
            set
            {
                m_DNI = value;
            }
        }

        public string Mail
        {
            get
            {
                return m_Mail;
            }
            set
            {
                m_Mail = value;
            }
        }

        public string Nombre
        {
            get
            {
                return m_Nombre;
            }
            set
            {
                m_Nombre = value;
            }
        }

        public string Observaciones
        {
            get
            {
                return m_Observaciones;
            }
            set
            {
                m_Observaciones = value;
            }
        }

        public string Telefono
        {
            get
            {
                return m_Telefono;
            }
            set
            {
                m_Telefono = value;
            }
        }

        #endregion

        public abstract void Save();

        protected void BaseSave(ParameterManager pParams)
        {
            FillParameters(pParams);
            if (Id == 0)//si Id==0 es porque todavia no esta guardado, hago un insert.
            {
                Id = BaseDatos.DB.ExecuteInsertCommandWithId(MyTables.Persona, pParams);
            }
            else
            {
                BaseDatos.DB.ExecuteUpdateCommand(MyTables.Persona, pParams);
            }
        }
        /// <summary>
        /// Le agrega a la coleccion de parametros los campos de Persona.
        /// </summary>
        /// <param name="pParameters"></param>
        protected void FillParameters(ParameterManager pParameters)
        {
            pParameters.Add("id", Id, true);
            pParameters.Add("Apellido", Apellido);
            pParameters.Add("Direccion", Direccion);
            pParameters.Add("DNI", DNI);
            pParameters.Add("Mail", Mail);
            pParameters.Add("Nombre", Nombre);
            pParameters.Add("Observaciones", Observaciones);
            pParameters.Add("Telefono", Telefono);
        }

        internal void FillFromDataRow(DataRow pDR)
        {
            this.Id = long.Parse(pDR["id"].ToString());
            this.Apellido=pDR["Apellido"].ToString();
            this.Direccion = pDR["Direccion"].ToString();
            this.DNI = pDR["DNI"].ToString();
            this.Mail = pDR["Mail"].ToString();
            this.Nombre = pDR["Nombre"].ToString();
            this.Observaciones = pDR["Observaciones"].ToString();
            this.Telefono = pDR["Telefono"].ToString();            
        }
        /// <summary>
        /// Se usa cuando se extraen los datos de una consulta compuesta.
        /// </summary>
        /// <param name="pDR"></param>
        /// <param name="pIdFieldName"></param>
        internal void FillFromDataRow(DataRow pDR, string pIdFieldName)
        {
            this.Id = long.Parse(pDR[pIdFieldName].ToString());
            this.Apellido = pDR["Apellido"].ToString();
            this.Direccion = pDR["Direccion"].ToString();
            this.DNI = pDR["DNI"].ToString();
            this.Mail = pDR["Mail"].ToString();
            this.Nombre = pDR["Nombre"].ToString();
            this.Observaciones = pDR["Observaciones"].ToString();
            this.Telefono = pDR["Telefono"].ToString();
        }
        public override string ToString()
        {
            return Apellido+", "+Nombre;
        }
    }//end Persona 
}